# Generated by precisionFDA exporter (v1.0.3) on 2018-06-14 03:34:06 +0000
# The asset download links in this file are valid only for 24h.

# Exported app: gatk-haplotypecaller-hs37d5decoy, revision: 1, authored by: justin.zook
# https://precision.fda.gov/apps/app-F17J5bQ0599Xyykb1zBpzGbG

# For more information please consult the app export section in the precisionFDA docs

# Start with Ubuntu 14.04 base image
FROM ubuntu:14.04

# Install default precisionFDA Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	aria2 \
	byobu \
	cmake \
	cpanminus \
	curl \
	dstat \
	g++ \
	git \
	htop \
	libboost-all-dev \
	libcurl4-openssl-dev \
	libncurses5-dev \
	make \
	perl \
	pypy \
	python-dev \
	python-pip \
	r-base \
	ruby1.9.3 \
	wget \
	xz-utils

# Install default precisionFDA python packages
RUN pip install \
	requests==2.5.0 \
	futures==2.2.0 \
	setuptools==10.2

# Add DNAnexus repo to apt-get
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/amd64/' > /etc/apt/sources.list.d/dnanexus.list"
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/all/' >> /etc/apt/sources.list.d/dnanexus.list"
RUN curl https://wiki.dnanexus.com/images/files/ubuntu-signing-key.gpg | apt-key add -

# Install app-specific Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	openjdk-7-jre-headless

# Download app assets
RUN curl https://dl.dnanex.us/F/D/YY91x087vbz57bf7jJvxbp7q41F38qKg0GG6pfpQ/GATK-3.5.tar | tar xf - -C / --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/7z9xkfY5P2q6Y28gpy98z218xJBbP0ZjfpZ5QPGz/hs37d5-fasta.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions

# Download helper executables
RUN curl https://dl.dnanex.us/F/D/0K8P4zZvjq9vQ6qV0b6QqY1z2zvfZ0QKQP4gjBXp/emit-1.0.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/bByKQvv1F7BFP3xXPgYXZPZjkXj9V684VPz8gb7p/run-1.2.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions

# Write app spec and code to root folder
RUN ["/bin/bash","-c","echo -E \\{\\\"spec\\\":\\{\\\"input_spec\\\":\\[\\{\\\"name\\\":\\\"bam_in\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"BAM\\ input\\ file\\\",\\\"help\\\":\\\"BAM\\ file\\ to\\ call\\ germline\\ SNPs\\ and\\ indels\\ \\ mapped\\ to\\ GRCh37\\ with\\ decoy\\\"\\},\\{\\\"name\\\":\\\"bai_in\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"BAI\\ input\\ file\\\",\\\"help\\\":\\\"BAI\\ file\\ associated\\ with\\ BAM\\ file\\\"\\},\\{\\\"name\\\":\\\"vcf_filename\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":false,\\\"label\\\":\\\"VCF\\ filename\\\",\\\"help\\\":\\\"The\\ prefix\\ that\\ will\\ be\\ used\\ to\\ name\\ the\\ output\\ VCF\\ file.\\\",\\\"default\\\":\\\"output\\\"\\},\\{\\\"name\\\":\\\"command_args\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Command-line\\ arguments\\\",\\\"help\\\":\\\"Specify\\ additional\\ HaplotypeCaller\\ specific\\ arguments\\\"\\},\\{\\\"name\\\":\\\"targets_interval_list\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Target\\ interval\\ list\\\",\\\"help\\\":\\\"Restrict\\ your\\ analysis\\ to\\ specific\\ intervals\\\"\\}\\],\\\"output_spec\\\":\\[\\{\\\"name\\\":\\\"vcf_out\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"VCF\\ output\\ file\\\",\\\"help\\\":\\\"VCF\\ output\\ file\\ \\\"\\}\\],\\\"internet_access\\\":true,\\\"instance_type\\\":\\\"baseline-8\\\"\\},\\\"assets\\\":\\[\\\"file-BvYzqJQ03vv66X10j8XgG21x\\\",\\\"file-Bk5y43Q0qVb0gjfqY8f9k4g8\\\"\\],\\\"packages\\\":\\[\\\"openjdk-7-jre-headless\\\"\\]\\} \u003e /spec.json"]
RUN ["/bin/bash","-c","echo -E \\{\\\"code\\\":\\\"\\#Need\\ to\\ move\\ BAI\\ file\\ to\\ same\\ directory\\ before\\ calling\\ command\\\\nmv\\ \\\\\\\"\\$bai_in_path\\\\\\\"\\ /work/in/bam_in/\\$bam_in_name.bai\\\\ntargets_interval_list_arg\\=\\'\\'\\\\nif\\ \\[\\ -n\\ \\\\\\\"\\$targets_interval_list\\\\\\\"\\ \\]\\;\\ then\\\\n\\ targets_interval_list_arg\\=\\\\\\\"-L\\ \\$targets_interval_list\\\\\\\"\\\\nfi\\\\n\\\\njava\\ -jar\\ GenomeAnalysisTK.jar\\ \\\\\\\\\\\\n\\\\t-T\\ HaplotypeCaller\\ \\\\\\\\\\\\n\\\\t-I\\ \\\\\\\"\\$bam_in_path\\\\\\\"\\ \\\\\\\\\\\\n\\\\t-R\\ hs37d5.fa\\ \\\\\\\\\\\\n\\\\t\\$targets_interval_list_arg\\ \\\\\\\\\\\\n\\\\t\\$command_args\\ \\\\\\\\\\\\n\\ \\ -o\\ \\\\\\\"\\$vcf_filename\\\\\\\".vcf\\\\n\\ \\ \\\\nemit\\ vcf_out\\ \\\\\\\"\\$vcf_filename\\\\\\\".vcf\\\"\\} | python -c 'import sys,json; print json.load(sys.stdin)[\"code\"]' \u003e /script.sh"]

# Create directory /work and set it to $HOME and CWD
RUN mkdir -p /work
ENV HOME="/work"
WORKDIR /work

# Set entry point to container
ENTRYPOINT ["/usr/bin/run"]

VOLUME /data
VOLUME /work